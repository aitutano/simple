// ===== COMPONENTS SCSS =====
// ID 08 - Componentes reutilizáveis usando mixins e variáveis Sass

// ===== BUTTONS =====
.btn-primary-custom {
  @include button-variant($primary-red, white, $primary-red-hover);
}

.btn-outline-custom {
  @include button-outline($primary-red, $primary-red, $primary-red);
}

.btn-secondary-custom {
  @include button-variant($text-secondary, white, darken($text-secondary, 10%));
}

.btn-success-custom {
  @include button-variant($success-green, white, darken($success-green, 10%));
}

.btn-danger-custom {
  @include button-variant($priority-high, white, darken($priority-high, 10%));
}

.btn-warning-custom {
  @include button-variant($warning-orange, white, darken($warning-orange, 10%));
}

.btn-info-custom {
  @include button-variant($info-blue, white, darken($info-blue, 10%));
}

// Button groups responsive
.btn-group {
  @include mobile-only {
    flex-direction: column;
    width: 100%;

    .btn {
      border-radius: $button-border-radius !important;
      @include margin(0, 0, $spacing-sm, 0);
    }
  }
}

.button-stack {
  @include flex-column;
  gap: $spacing-sm;

  .btn {
    width: 100%;
  }
}

// ===== CARDS =====
.task-card {
  @include card-interactive;
}

.project-card {
  @include card-interactive;
}

.card {
  @include card-base;
}

.card-body {
  @include padding($spacing-lg);
}

.card-header {
  @include padding($spacing-md, $spacing-lg);
  background: $accent-bg;
  border-bottom: 1px solid $border-color;
  border-radius: $radius-lg $radius-lg 0 0;

  .card-title {
    @include margin(0);
    @include font-size($font-size-lg, $line-height-normal);
    font-weight: $font-weight-semibold;
  }
}

.card-footer {
  @include padding($spacing-md, $spacing-lg);
  background: $accent-bg;
  border-top: 1px solid $border-color;
  border-radius: 0 0 $radius-lg $radius-lg;
}

// Card responsive adjustments
@include tablet-only {
  .task-card,
  .project-card,
  .card {
    @include padding(clamp($spacing-md, 4vw, $spacing-lg));
  }

  .task-meta,
  .project-meta {
    @include flex-column;
    align-items: flex-start;
    gap: $spacing-sm;
  }

  .task-actions,
  .project-actions {
    opacity: 1;
    position: relative;
    @include margin($spacing-md, 0, 0, 0);
  }
}

// ===== FORMS =====
.form-group {
  @include margin(0, 0, $spacing-lg, 0);
  position: relative;
}

.form-label {
  @include form-label;
}

.form-control {
  @include form-control;
}

.form-select {
  @include form-control;
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m1 6 7 7 7-7'/%3e%3c/svg%3e");
  background-repeat: no-repeat;
  background-position: right 0.75rem center;
  background-size: 16px 12px;
  padding-right: 2.5rem;
}

.form-error {
  @include form-error;
  position: absolute;
  bottom: -1.25rem;
  left: 0;
  background: $secondary-bg;
  @include padding($spacing-xs, $spacing-sm);
  border-radius: $radius-sm;
  box-shadow: $shadow-sm;
  z-index: 10;
  @include truncate-text;
  max-width: 100%;
}

.form-success {
  @extend .form-error;
  color: $success-green;
}

// Input groups
.input-group {
  .form-control {
    border-radius: 0 $input-border-radius $input-border-radius 0;
  }

  .input-group-text {
    border: $input-border-width solid $border-color;
    border-right: 0;
    border-radius: $input-border-radius 0 0 $input-border-radius;
    background: $accent-bg;
    min-height: $input-height;
    @include flex-center;
    @include padding(0, $spacing-md);
  }

  &:focus-within {
    .input-group-text {
      border-color: $primary-red;
    }

    .form-control {
      border-left-color: $primary-red;
    }
  }
}

// Form validation states
.form-group {
  &.has-error {
    @include margin(0, 0, calc(#{$spacing-lg} + 1.5rem), 0);
  }

  &.has-success {
    @include margin(0, 0, calc(#{$spacing-lg} + 1.5rem), 0);
  }
}

// Checkbox and radio styling
.form-check-input {
  width: 1.25rem;
  height: 1.25rem;
  margin-top: 0.125rem;
  border: $input-border-width solid $border-color;

  &:focus {
    border-color: $primary-red;
    box-shadow: 0 0 0 0.25rem rgba($primary-red, 0.1);
  }

  &:checked {
    background-color: $primary-red;
    border-color: $primary-red;
  }
}

.form-check .form-check-input[type="checkbox"] {
  border-radius: $radius-sm;
}

// Mobile form optimizations
@include mobile-only {
  .form-control,
  .form-select {
    min-height: $button-height;
    font-size: 16px; // Prevents zoom on iOS
  }

  .input-group-text {
    min-height: $button-height;
    @include padding(0, $spacing-sm);
  }

  .form-error,
  .form-success {
    position: static;
    @include margin($spacing-sm, 0, 0, 0);
    white-space: normal;
    max-width: none;
  }

  .form-group {
    &.has-error,
    &.has-success {
      @include margin(0, 0, $spacing-lg, 0);
    }
  }
}

// ===== BADGES =====
.priority-badge {
  @include padding($spacing-xs, $spacing-sm);
  border-radius: $radius-sm;
  @include font-size($font-size-xs);
  font-weight: $font-weight-semibold;
  text-transform: uppercase;
}

.priority-high {
  background: rgba($priority-high, 0.1);
  color: $priority-high;
}

.priority-medium {
  background: rgba($priority-medium, 0.1);
  color: $priority-medium;
}

.priority-low {
  background: rgba($priority-low, 0.1);
  color: $priority-low;
}

.status-badge {
  @include padding($spacing-xs, $spacing-sm);
  border-radius: $radius-sm;
  @include font-size($font-size-xs);
  font-weight: $font-weight-semibold;
}

.status-pending {
  background: rgba($info-blue, 0.1);
  color: $info-blue;
}

.status-in-progress {
  background: rgba($warning-orange, 0.1);
  color: $warning-orange;
}

.status-completed {
  background: rgba($success-green, 0.1);
  color: $success-green;
}

// ===== TASK SPECIFIC COMPONENTS =====
.task-title {
  @include font-size($font-size-lg);
  font-weight: $font-weight-semibold;
  @include margin(0, 0, $spacing-sm, 0);
  color: $text-primary;
}

.task-description {
  color: $text-secondary;
  @include font-size($font-size-sm);
  @include margin(0, 0, $spacing-md, 0);
  @include multiline-truncate(3);
}

.task-meta {
  @include flex-between;
  flex-wrap: wrap;
  gap: $spacing-sm;
}

.task-actions {
  @include flex-wrap;
  gap: $spacing-xs;
  opacity: 0;
  transition: opacity $transition-base;

  .task-card:hover & {
    opacity: 1;
  }
}

.task-tags {
  @include flex-wrap;
  gap: $spacing-xs;
  @include margin($spacing-sm, 0, 0, 0);

  .badge {
    background: $text-secondary;
    color: white;
    @include font-size($font-size-xs);
    @include padding($spacing-xs, $spacing-sm);
    border-radius: $radius-sm;
  }
}

// ===== MODAL COMPONENTS =====
.modal-content {
  border-radius: $radius-lg;
  border: none;
  box-shadow: $shadow-lg;
}

.modal-header {
  @include padding($spacing-lg);
  border-bottom: 1px solid $border-color;

  .modal-title {
    @include flex-center;
    justify-content: flex-start;
    @include margin(0);

    i {
      @include margin(0, $spacing-sm, 0, 0);
      color: $primary-red;
    }
  }
}

.modal-body {
  @include padding($spacing-lg);
}

.modal-footer {
  @include padding($spacing-lg);
  border-top: 1px solid $border-color;
  @include flex-between;
  gap: $spacing-sm;
}

@include mobile-only {
  .modal-dialog {
    @include margin($spacing-sm);
  }

  .modal-header,
  .modal-body,
  .modal-footer {
    @include padding($spacing-md);
  }
}

// ===== LOADING STATES =====
.loading-spinner {
  border: 3px solid $border-color;
  border-top: 3px solid $primary-red;
  border-radius: 50%;
  width: 2rem;
  height: 2rem;
  animation: spin 1s linear infinite;
  @include margin($spacing-md, auto);
}

.skeleton {
  @include loading-skeleton;
}

.loading-state {
  @include flex-center;
  @include flex-column;
  @include padding($spacing-xxl, 0);

  .loading-spinner {
    @include margin(0, auto, $spacing-md, auto);
  }
}

// ===== ANIMATIONS =====
.fade-in {
  @include fade-in;
}

.slide-in-up {
  @include slide-in-up;
}

.slide-in-right {
  @include slide-in-right;
}

// Animation keyframes
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(-30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes loading {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}

// ===== SEARCH COMPONENTS =====
.search-box {
  .input-group {
    min-width: 250px;

    @include mobile-only {
      min-width: 200px;
    }
  }
}

// ===== FILTER COMPONENTS =====
.filter-tabs {
  .btn-group {
    @include mobile-only {
      @include flex-column;
      width: 100%;
    }
  }
}

.filter-controls {
  @include flex-wrap;
  gap: $spacing-sm;

  .form-select {
    min-width: 180px;

    @include mobile-only {
      min-width: 150px;
    }
  }
}

// ===== STATS COMPONENTS =====
.stats-list {
  .stat-item {
    @include flex-between;
    @include margin(0, 0, $spacing-sm, 0);

    &:last-child {
      @include margin(0);
    }
  }
}

.priority-chart {
  .priority-item {
    @include margin(0, 0, $spacing-md, 0);

    &:last-child {
      @include margin(0);
    }

    .progress {
      height: 6px;
      background: rgba($border-color, 0.3);
      border-radius: $radius-sm;
      overflow: hidden;

      .progress-bar {
        transition: width $transition-base;
      }
    }
  }
}

// ===== UTILITY COMPONENTS =====
.text-muted {
  color: $text-secondary !important;
}

.text-small {
  @include font-size($font-size-sm);
}

.fw-bold {
  font-weight: $font-weight-bold !important;
}

.fw-medium {
  font-weight: $font-weight-medium !important;
}

.fw-normal {
  font-weight: $font-weight-normal !important;
}
